"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var mkdirp = require("mkdirp");
var glob = require("glob");
var fs = require("fs");
var PATH = require("path");
var compiler_factory_1 = require("./compiler.factory");
/**
 * Get all files in dir matching patterns
 */
function readDir(dir, patterns) {
    return patterns.reduce(function (results, pattern) {
        return glob.sync(PATH.join(dir, pattern))
            .filter(function (path) { return fs.statSync(path).isFile(); })
            .concat(results);
    }, []);
}
exports.readDir = readDir;
function save(collection, lang, format, output) {
    var compiler = compiler_factory_1.CompilerFactory.create(format, {});
    var normalizedOutput = normalizePath(output, compiler.extension, lang);
    var dir = normalizedOutput;
    var filename = lang + "." + compiler.extension;
    if (!fs.existsSync(normalizedOutput) || !fs.statSync(normalizedOutput).isDirectory()) {
        dir = PATH.dirname(normalizedOutput);
        filename = PATH.basename(normalizedOutput);
    }
    var outputPath = PATH.join(dir, filename);
    collection = collection.sort();
    if (collection.count() > 0) {
        if (!fs.existsSync(dir)) {
            mkdirp.sync(dir);
        }
        fs.writeFileSync(outputPath, compiler.compile(collection));
    }
}
exports.save = save;
function normalizePath(output, extension, lang) {
    return PATH.resolve(output
        .replace('[lang]', lang)
        .replace('[ext]', extension));
}
exports.normalizePath = normalizePath;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFpQztBQUNqQywyQkFBNkI7QUFDN0IsdUJBQXlCO0FBQ3pCLDJCQUE2QjtBQUU3Qix1REFBcUQ7QUFHckQ7O0dBRUc7QUFDSCxpQkFBd0IsR0FBVyxFQUFFLFFBQWtCO0lBQ3JELE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFVBQUMsT0FBTyxFQUFFLE9BQU87UUFDdEMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLENBQUM7YUFDdEMsTUFBTSxDQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBMUIsQ0FBMEIsQ0FBQzthQUMxQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDckIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ1QsQ0FBQztBQU5ELDBCQU1DO0FBRUQsY0FBcUIsVUFBeUMsRUFBRSxJQUFZLEVBQUUsTUFBYyxFQUFFLE1BQWM7SUFDMUcsSUFBTSxRQUFRLEdBQXNCLGtDQUFlLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztJQUV2RSxJQUFNLGdCQUFnQixHQUFHLGFBQWEsQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN6RSxJQUFJLEdBQUcsR0FBVyxnQkFBZ0IsQ0FBQztJQUNuQyxJQUFJLFFBQVEsR0FBYyxJQUFJLFNBQUksUUFBUSxDQUFDLFNBQVcsQ0FBQztJQUN2RCxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckYsR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUNyQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxJQUFNLFVBQVUsR0FBVyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUNwRCxVQUFVLEdBQUcsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO0lBRS9CLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNCLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDeEIsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuQixDQUFDO1FBQ0QsRUFBRSxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7QUFDSCxDQUFDO0FBcEJELG9CQW9CQztBQUVELHVCQUE4QixNQUFjLEVBQUUsU0FBaUIsRUFBRSxJQUFZO0lBQzNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU07U0FDdkIsT0FBTyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUM7U0FDdkIsT0FBTyxDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDO0FBQ2xDLENBQUM7QUFKRCxzQ0FJQyIsImZpbGUiOiJ1dGlscy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIG1rZGlycCBmcm9tICdta2RpcnAnO1xuaW1wb3J0ICogYXMgZ2xvYiBmcm9tICdnbG9iJztcbmltcG9ydCAqIGFzIGZzIGZyb20gJ2ZzJztcbmltcG9ydCAqIGFzIFBBVEggZnJvbSAncGF0aCc7XG5pbXBvcnQgeyBDb21waWxlckludGVyZmFjZSB9IGZyb20gJy4vYmllc2JqZXJnLW5neC10cmFuc2xhdGUtZXh0cmFjdCc7XG5pbXBvcnQgeyBDb21waWxlckZhY3RvcnkgfSBmcm9tICcuL2NvbXBpbGVyLmZhY3RvcnknO1xuaW1wb3J0IHsgRXh0ZW5kZWRUcmFuc2xhdGlvbkNvbGxlY3Rpb24gfSBmcm9tICcuL0V4dGVuZGVkVHJhbnNsYXRpb25Db2xsZWN0aW9uICc7XG5cbi8qKlxuICogR2V0IGFsbCBmaWxlcyBpbiBkaXIgbWF0Y2hpbmcgcGF0dGVybnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlYWREaXIoZGlyOiBzdHJpbmcsIHBhdHRlcm5zOiBzdHJpbmdbXSk6IHN0cmluZ1tdIHtcbiAgcmV0dXJuIHBhdHRlcm5zLnJlZHVjZSgocmVzdWx0cywgcGF0dGVybikgPT4ge1xuICAgIHJldHVybiBnbG9iLnN5bmMoUEFUSC5qb2luKGRpciwgcGF0dGVybikpXG4gICAgICAuZmlsdGVyKHBhdGggPT4gZnMuc3RhdFN5bmMocGF0aCkuaXNGaWxlKCkpXG4gICAgICAuY29uY2F0KHJlc3VsdHMpO1xuICB9LCBbXSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzYXZlKGNvbGxlY3Rpb246IEV4dGVuZGVkVHJhbnNsYXRpb25Db2xsZWN0aW9uLCBsYW5nOiBzdHJpbmcsIGZvcm1hdDogc3RyaW5nLCBvdXRwdXQ6IHN0cmluZykge1xuICBjb25zdCBjb21waWxlcjogQ29tcGlsZXJJbnRlcmZhY2UgPSBDb21waWxlckZhY3RvcnkuY3JlYXRlKGZvcm1hdCwge30pO1xuXG4gIGNvbnN0IG5vcm1hbGl6ZWRPdXRwdXQgPSBub3JtYWxpemVQYXRoKG91dHB1dCwgY29tcGlsZXIuZXh0ZW5zaW9uLCBsYW5nKTtcbiAgbGV0IGRpcjogc3RyaW5nID0gbm9ybWFsaXplZE91dHB1dDtcbiAgbGV0IGZpbGVuYW1lOiBzdHJpbmcgPSBgJHtsYW5nfS4ke2NvbXBpbGVyLmV4dGVuc2lvbn1gO1xuICBpZiAoIWZzLmV4aXN0c1N5bmMobm9ybWFsaXplZE91dHB1dCkgfHwgIWZzLnN0YXRTeW5jKG5vcm1hbGl6ZWRPdXRwdXQpLmlzRGlyZWN0b3J5KCkpIHtcbiAgICBkaXIgPSBQQVRILmRpcm5hbWUobm9ybWFsaXplZE91dHB1dCk7XG4gICAgZmlsZW5hbWUgPSBQQVRILmJhc2VuYW1lKG5vcm1hbGl6ZWRPdXRwdXQpO1xuICB9XG5cbiAgY29uc3Qgb3V0cHV0UGF0aDogc3RyaW5nID0gUEFUSC5qb2luKGRpciwgZmlsZW5hbWUpO1xuICBjb2xsZWN0aW9uID0gY29sbGVjdGlvbi5zb3J0KCk7XG5cbiAgaWYgKGNvbGxlY3Rpb24uY291bnQoKSA+IDApIHtcbiAgICBpZiAoIWZzLmV4aXN0c1N5bmMoZGlyKSkge1xuICAgICAgbWtkaXJwLnN5bmMoZGlyKTtcbiAgICB9XG4gICAgZnMud3JpdGVGaWxlU3luYyhvdXRwdXRQYXRoLCBjb21waWxlci5jb21waWxlKGNvbGxlY3Rpb24pKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplUGF0aChvdXRwdXQ6IHN0cmluZywgZXh0ZW5zaW9uOiBzdHJpbmcsIGxhbmc6IHN0cmluZykge1xuICByZXR1cm4gUEFUSC5yZXNvbHZlKG91dHB1dFxuICAgIC5yZXBsYWNlKCdbbGFuZ10nLCBsYW5nKVxuICAgIC5yZXBsYWNlKCdbZXh0XScsIGV4dGVuc2lvbikpO1xufVxuXG4iXX0=
